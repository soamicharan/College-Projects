#include<iostream>
#include<stdlib.h>
using namespace std;
class matrix_operation
{
    public:
    int row1,col1,row2,col2;
    matrix_operation(int r1,int c1,int r2,int c2)
    {
       row1=r1;
        col1=c1;
        row2=r2;
        col2=c2;
    }

    int** input_mat(int row,int col)
    {
        int **mat;
        mat = new int*[row];
        for(int i=0;i<row;i++)
        {
            mat[i]=new int[col];
            for(int j=0;j<col;j++)
            {
                cin>>mat[i][j];
            }
        }
        return mat;
    }

    void read_mat(int** mat1,int** mat2)
    {
        cout<<"Matrix 1"<<endl;
        for(int i=0;i<row1;i++)
        {
            for(int j=0;j<col1;j++)
            {
                cout<<mat1[i][j]<<" ";
            }
            cout<<endl;
        }
        cout<<"matrix 2"<<endl;
        for(int i=0;i<row2;i++)
        {
            for(int j=0;j<col2;j++)
            {
                cout<<mat2[i][j]<<" ";
            }
            cout<<endl;
        }
    }
    int** add_matrix(int** mat1,int** mat2)
    {
        if(row1!=row2 || col1!=col2)
        {
            cout<<"Dimension not matched, addition not possible"<<endl;
        }
        else{
        int **add_mat;
        add_mat = new int*[row1];
        for(int i=0;i<row1;i++)
        {
            add_mat[i]=new int[col1];
            for(int j=0;j<col1;j++)
            {
                add_mat[i][j]=mat1[i][j]+mat2[i][j];
            }
        }
        return add_mat;
        }
    }
    int** mul_matrix(int** mat1,int** mat2)
    {
        int temp=0;
        if(col1!=row2)
        {
            cout<<"Dimension not matched, addition not possible"<<endl;
            return 0;
        }
        else{
        int **mul_mat;
        mul_mat = new int*[row1];
        for(int i=0;i<row1;i++)
        {
            mul_mat[i]=new int[col2];
            for(int j=0;j<col2;j++)
            {
                for(int k=0;k<row2;k++)
                {
                    temp+=mat1[i][k]*mat2[k][j];
                }
                mul_mat[i][j]=temp;
                temp=0;
            }
        }
        return mul_mat;
        }
    }
    void output_matrix(int** add_mat,int** mul_mat)
    {
        cout<<"press 1 to show addition matrix\npress 2 to show multiplication matrix\n";
        int ch;
        cin>>ch;
        if(ch==1){
        cout<<"addition matrix"<<endl;
        for(int i=0;i<row1;i++)
        {
            for(int j=0;j<col1;j++)
            {
                cout<<add_mat[i][j]<<" ";
            }
            cout<<endl;
        }
        }
        else{
        cout<<"multiplication matrix"<<endl;
        for(int i=0;i<row1;i++)
        {
            for(int j=0;j<col2;j++)
            {
                cout<<mul_mat[i][j]<<" ";
            }
            cout<<endl;
        }
        }
    }
};
int main()
{


    while(true)
    {
         int r1,c1,r2,c2;
            cout<<"Enter dimension of first matrix"<<endl;
            cin>>r1;
            cin>>c1;
            cout<<"Enter dimension of second matrix"<<endl;
            cin>>r2;
            cin>>c2;
            matrix_operation matrix(r1,c1,r2,c2);
            int **mat1, **mat2, **add_mat, **mul_mat;
            cout<<"Enter matrix 1"<<endl;
            mat1 = matrix.input_mat(r1,c1);
            cout<<"Enter Matrix 2"<<endl;
            mat2=matrix.input_mat(r2,c2);
        while(true){
        cout<<"Press 1 - Enter new Matrix\nPress 2 - Read Matrix\nPress 3 - add Matrices\nPress 4 -Multiply matrices\nPress 5 - show output result\nPress 6 - exit\n";
        int ch;
        cin>>ch;
        if(ch==1)
        {
            break;
        }
        else if(ch==2)
        {
            matrix.read_mat(mat1,mat2);
        }
        else if(ch==3)
        {
            add_mat=matrix.add_matrix(mat1,mat2);
        }
        else if(ch==4)
        {
            mul_mat=matrix.mul_matrix(mat1,mat2);
        }
        else if(ch==5)
        {
            matrix.output_matrix(add_mat,mul_mat);
        }
        else if(ch==6)
            exit(0);
        else
            cout<<"Wrong input,try again"<<endl;
        }
        }

    }

